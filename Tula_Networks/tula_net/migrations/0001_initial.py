# Generated by Django 3.1.1 on 2020-12-08 15:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClassVoltage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_voltage', models.SmallIntegerField(verbose_name='Класс напряжения')),
            ],
            options={
                'verbose_name': 'напряжение',
                'verbose_name_plural': 'напряжения',
                'ordering': ['-class_voltage'],
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Группа')),
                ('location', models.TextField(blank=True, verbose_name='Расположение')),
                ('description', models.TextField(blank=True, verbose_name='Описение')),
                ('ours', models.BooleanField(blank=True, null=True, verbose_name='наши')),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
                'ordering': ['-ours', 'name'],
            },
        ),
        migrations.CreateModel(
            name='GroupLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='Группа')),
                ('location', models.TextField(blank=True, verbose_name='Расположение')),
                ('description', models.TextField(blank=True, verbose_name='Описение')),
                ('ours', models.BooleanField(blank=True, null=True, verbose_name='наши')),
            ],
            options={
                'verbose_name': 'Участок сл ВЛ',
                'verbose_name_plural': 'Участки сл ВЛ',
                'ordering': ['-ours', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='ФИО')),
                ('position', models.CharField(blank=True, max_length=64, null=True, verbose_name='должность')),
                ('priority', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='приоритет')),
                ('description', models.TextField(blank=True, verbose_name='Описение')),
            ],
            options={
                'verbose_name': 'Ответственное лицо',
                'verbose_name_plural': 'Ответственные лица',
                'ordering': ['-priority'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Регион')),
                ('for_menu', models.BooleanField(default=False, verbose_name='Добавить в меню')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регион',
            },
        ),
        migrations.CreateModel(
            name='Res',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='РЭС')),
                ('short_name', models.CharField(max_length=16, unique=True, verbose_name='РЭС сокращ + участок')),
                ('location', models.TextField(blank=True, verbose_name='Расположение')),
                ('description', models.TextField(blank=True, verbose_name='Описение')),
            ],
            options={
                'verbose_name': 'РЭС',
                'verbose_name_plural': 'РЭСы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='№ секции')),
                ('name', models.CharField(max_length=32, verbose_name='Название секции')),
                ('from_T', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='питается от/питает Т №')),
                ('blind', models.BooleanField(default=False, verbose_name='Тупиковая')),
                ('description', models.TextField(blank=True, verbose_name='Описение')),
            ],
            options={
                'verbose_name': 'Секция',
                'verbose_name_plural': 'Секции',
                'ordering': ['voltage__class_voltage', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='Название организации')),
                ('short_name', models.CharField(blank=True, max_length=16, null=True, verbose_name='Назв орган сокращ')),
                ('ours', models.BooleanField(verbose_name='наши')),
                ('year_update', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Списки обновлены')),
                ('description', models.TextField(blank=True, verbose_name='Описение')),
                ('region', models.ForeignKey(blank=True, default=2, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tula_net.region', verbose_name='участок')),
            ],
            options={
                'verbose_name': 'организация',
                'verbose_name_plural': 'организации',
                'ordering': ['-ours', 'name'],
            },
        ),
        migrations.CreateModel(
            name='TransmissionLine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('full_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Полное название')),
                ('short_name', models.CharField(blank=True, default='', max_length=32, verbose_name='Цифровое название')),
                ('length', models.FloatField(blank=True, null=True, verbose_name='Протяженность')),
                ('number_columns', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Количество опор')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описение')),
                ('kvl', models.BooleanField(default=False, verbose_name='КВЛ?')),
                ('group', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='lines0', to='tula_net.groupline', verbose_name='Участок сл ВЛ')),
                ('maintenance', models.ManyToManyField(blank=True, related_name='lines_ved0', to='tula_net.Region', verbose_name='Ведение')),
                ('management', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='lines_upr0', to='tula_net.region', verbose_name='Управление')),
                ('section', models.ManyToManyField(related_name='lines0', to='tula_net.Section', verbose_name='Секция')),
                ('subscriber', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lines0', to='tula_net.subscriber', verbose_name='абонент')),
                ('voltage', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lines0', to='tula_net.classvoltage', verbose_name='Напряжение')),
            ],
            options={
                'verbose_name': 'Линия - МОДЕЛЬ ЗАМЕНЕНА',
                'verbose_name_plural': 'Линии - МОДЕЛЬ ЗАМЕНЕНА',
                'ordering': ['voltage', 'short_name'],
            },
        ),
        migrations.CreateModel(
            name='Substation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(unique=True, verbose_name='Номер ПС')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='Название ПС')),
                ('alien', models.BooleanField(verbose_name='чужая?')),
                ('location', models.TextField(blank=True, verbose_name='Расположение')),
                ('description', models.TextField(blank=True, verbose_name='Описение')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substations', to='tula_net.group', verbose_name='Группа')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='substations', to='tula_net.subscriber', verbose_name='Владелец')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='substations', to='tula_net.region', verbose_name='Участок')),
                ('voltage_h', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ps_volt_h', to='tula_net.classvoltage', verbose_name='напряжение высокое')),
                ('voltage_l', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ps_volt_l', to='tula_net.classvoltage', verbose_name='напряжение низкое')),
                ('voltage_m', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ps_volt_m', to='tula_net.classvoltage', verbose_name='напряжение среднее')),
            ],
            options={
                'verbose_name': 'Подстанция',
                'verbose_name_plural': 'Подстанции',
                'ordering': ['number'],
            },
        ),
        migrations.AddField(
            model_name='section',
            name='substation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='tula_net.substation'),
        ),
        migrations.AddField(
            model_name='section',
            name='voltage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='tula_net.classvoltage', verbose_name='напряжение'),
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=20, verbose_name='номер')),
                ('search_number', models.CharField(blank=True, max_length=16, null=True, verbose_name='НЕ ЗАПОЛНЯТЬ')),
                ('priority', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='приоритет')),
                ('description', models.TextField(blank=True, verbose_name='описение')),
                ('person', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='phones', to='tula_net.person', verbose_name='лицо')),
                ('subscriber', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='phones', to='tula_net.subscriber', verbose_name='организация')),
                ('substation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='phones', to='tula_net.substation', verbose_name='ПС')),
            ],
            options={
                'verbose_name': 'Телефон',
                'verbose_name_plural': 'Телефоны',
                'ordering': ['-priority'],
            },
        ),
        migrations.AddField(
            model_name='person',
            name='subscriber',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='persons', to='tula_net.subscriber'),
        ),
        migrations.CreateModel(
            name='Line',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Название')),
                ('full_name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Полное название')),
                ('short_name', models.CharField(blank=True, default='', max_length=32, verbose_name='Цифровое название')),
                ('ps_p1', models.PositiveSmallIntegerField(verbose_name='ПС №1')),
                ('sec_p1', models.PositiveSmallIntegerField(verbose_name='СШ ПС №1')),
                ('ps_p2', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='ПС №2')),
                ('sec_p2', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='СШ ПС №2')),
                ('ps_m1', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='ПС №3')),
                ('sec_m1', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='СШ ПС №3')),
                ('ps_m2', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='ПС №4')),
                ('sec_m2', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='СШ ПС №4')),
                ('ps_m3', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='ПС №5')),
                ('sec_m3', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='СШ ПС №5')),
                ('ps_m4', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='ПС №6')),
                ('sec_m4', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='СШ ПС №6')),
                ('length', models.FloatField(blank=True, null=True, verbose_name='Протяженность')),
                ('number_columns', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Количество опор')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описение')),
                ('kvl', models.BooleanField(default=False, verbose_name='КВЛ?')),
                ('group', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='tula_net.groupline', verbose_name='Участок сл ВЛ')),
                ('maintenance', models.ManyToManyField(blank=True, related_name='lines_ved', to='tula_net.Region', verbose_name='Ведение')),
                ('management', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, related_name='lines_upr', to='tula_net.region', verbose_name='Управление')),
                ('subscriber', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lines', to='tula_net.subscriber', verbose_name='абонент')),
                ('voltage', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='lines', to='tula_net.classvoltage', verbose_name='Напряжение')),
            ],
            options={
                'verbose_name': 'Линия',
                'verbose_name_plural': 'Линии',
                'ordering': ['voltage', 'short_name'],
            },
        ),
        migrations.CreateModel(
            name='Feeder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название фидера')),
                ('try_number_name', models.SmallIntegerField(blank=True, null=True)),
                ('attention', models.BooleanField(default=False, verbose_name='!!!')),
                ('in_reserve', models.BooleanField(default=False, verbose_name='Резервный')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описение')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feeders', to='tula_net.region', verbose_name='Участок')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feeders', to='tula_net.section', verbose_name='СкШ')),
                ('subscriber', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feeders', to='tula_net.subscriber', verbose_name='абонент')),
                ('substation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feeders', to='tula_net.substation', verbose_name='ПС')),
            ],
            options={
                'verbose_name': 'фидер',
                'verbose_name_plural': 'фидера',
                'ordering': ['in_reserve', 'section', 'try_number_name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Feeder_characteristic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feeder_name', models.CharField(max_length=64, verbose_name='Название фидера')),
                ('substation_name', models.CharField(max_length=64, verbose_name='Название ПС')),
                ('length', models.FloatField(blank=True, null=True, verbose_name='Протяженность')),
                ('tp_our_num', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='ТП наши: количество')),
                ('tp_alien_num', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='ТП чужие: количество')),
                ('villages_num', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='НП количество')),
                ('villages_names', models.TextField(blank=True, null=True, verbose_name='НП названия')),
                ('power_winter', models.FloatField(blank=True, null=True, verbose_name='Зима МВт')),
                ('power_summer', models.FloatField(blank=True, null=True, verbose_name='Лето МВт')),
                ('population', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Население')),
                ('points', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Точки поставки')),
                ('social_num', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Социалка кол-во')),
                ('social_names', models.TextField(blank=True, null=True, verbose_name='Социалка тип')),
                ('checked', models.BooleanField(default=False, verbose_name='соответствует')),
                ('feeder', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='character', to='tula_net.feeder', verbose_name='фидер')),
            ],
            options={
                'verbose_name': 'характеристика фидера',
                'verbose_name_plural': 'х-ки фидеров',
                'unique_together': {('feeder_name', 'substation_name')},
            },
        ),
    ]
